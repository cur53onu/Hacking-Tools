#!/usr/bin/env python
import requests,re,urlparse
from BeautifulSoup import BeautifulSoup
class Scanner(object):
	"""docstring for Scanner"""
	def __init__(self, url,ignore_links):
		self.session = requests.Session()
		self.target_url = url
		self.ignore_links=ignore_links
		self.target_links=[]
	def extract_links(self,url):
		response = self.session.get(url)
		return re.findall('(?:href=")(.*?)"',response.content)
	def crawl(self,url=None):
		if url==None:
			url=self.target_url
		href_links = self.extract_links(url)
		for link in href_links:
			link=urlparse.urljoin(url,link)
			if "#" in link:
				link = link.split("#")[0]
			if self.target_url in link and link not in self.target_links and link not in self.ignore_links:
				self.target_links.append(link)
				print(link)
				self.crawl(link)
	def extract_forms(self,url):
		response = self.session.get(url)
		parsed_html = BeautifulSoup(response.content)
		return parsed_html.findAll("form")
	def submit_form(self,form,value,url):
		action = form.get("action")
		post_url = urlparse.urljoin(url,action)
		method = form.get("method")
		inputs_list = form.findAll("input")
		post_data={}
		for input1 in inputs_list:
			input1_name=input1.get("name")
			input1_type=input1.get("type")
			input1_value=input1.get("value")
			if input1_type =="text":
				input1_value=value
			post_data[input1_name]=input1_value
		if method=="post":
			return self.session.post(post_url,data=post_data)
		else :
			return self.session.get(post_url,params=post_data)
	def run_scanner(self):
		for link in self.target_links:
			forms = self.extract_forms(link)
			for val in forms:
				print("[+] Testing form in "+link)
				is_vulnerable_to_xss = self.test_xss_in_form(val,link)
				if is_vulnerable_to_xss:
					print("\n\n[***] Vulnerable to xss "+link+" in following form")
					print(val)

			if "=" in link:
				print("[+] Testing "+link)
				is_vulnerable_to_xss = self.test_xss_in_link(link)
				if is_vulnerable_to_xss:
					print("\n\n[***] Vulnerable to xss "+link)

	def test_xss_in_link(self,url):
		xss_test_script="<sCript>alert('Hacked')</scriPt>"
		url=url.replace("=","="+xss_test_script)
		response = self.session.get(url)
		if xss_test_script in response.content:
			return True
	def test_xss_in_form(self,form,url):
		xss_test_script="<sCript>alert('Hacked')</scriPt>"
		response=self.submit_form(form,xss_test_script,url)
		if xss_test_script in response.content:
			return True
